<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:styles="clr-namespace:PS.WPF.Styles"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup">

    <Geometry x:Key="SubMenuGeometry">M 0 0 L 0 7 L 4 3.5 Z</Geometry>
    <Geometry x:Key="UpArrowGeometry">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrowGeometry">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="CheckGeometry">M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z</Geometry>

    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <Rectangle x:Name="R1"
                                   Width="1"
                                   DockPanel.Dock="Right"
                                   Fill="Transparent" />
                        <Rectangle x:Name="B1"
                                   Height="1"
                                   DockPanel.Dock="Bottom"
                                   Fill="Transparent" />
                        <Rectangle x:Name="L1"
                                   Width="1"
                                   DockPanel.Dock="Left"
                                   Fill="Transparent" />
                        <Rectangle x:Name="T1"
                                   Height="1"
                                   DockPanel.Dock="Top"
                                   Fill="Transparent" />
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
                            <Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <ControlTemplate x:Key="{x:Static styles:Menu.MenuScrollViewerTemplate}" TargetType="{x:Type ScrollViewer}">
        <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False"
                          Style="{StaticResource MenuScrollButton}">
                <RepeatButton.Visibility>
                    <MultiBinding FallbackValue="Visibility.Collapsed"
                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                  ConverterParameter="0">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                    </MultiBinding>
                </RepeatButton.Visibility>
                <Path Data="{StaticResource UpArrowGeometry}"
                      Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                      SnapsToDevicePixels="True" />
            </RepeatButton>
            <Border Grid.Row="1" Grid.Column="0">
                <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
            </Border>
            <RepeatButton Grid.Row="2"
                          Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False"
                          Style="{StaticResource MenuScrollButton}">
                <RepeatButton.Visibility>
                    <MultiBinding FallbackValue="Visibility.Collapsed"
                                  Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                  ConverterParameter="100">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight" />
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight" />
                    </MultiBinding>
                </RepeatButton.Visibility>
                <Path Data="{StaticResource DownArrowGeometry}"
                      Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                      SnapsToDevicePixels="True" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Menu.MenuScrollViewerStyle}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.MenuScrollViewerTemplate}}" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <ControlTemplate x:Key="{x:Static styles:Menu.MenuTemplate}" TargetType="{x:Type MenuBase}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <ItemsPresenter ClipToBounds="True" />
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Menu.MenuStyle}" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{theme:Brush Main}" />
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.MenuTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{x:Static styles:Menu.ContextMenuTemplate}" TargetType="{x:Type MenuBase}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel Margin="0,2"
                        ClipToBounds="True"
                        IsItemsHost="True"
                        Orientation="Vertical" />
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Menu.ContextMenuStyle}" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{theme:Brush Main}" />
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.ContextMenuTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{x:Static styles:Menu.SeparatorTemplate}" TargetType="{x:Type Separator}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Menu.SeparatorStyle}" TargetType="{x:Type Separator}">
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.SeparatorTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{x:Static styles:Menu.TopLevelHeaderTemplate}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Background="Transparent">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       Placement="Bottom"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">

                        <ScrollViewer CanContentScroll="True" Style="{StaticResource {x:Static styles:Menu.MenuScrollViewerStyle}}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{theme:Brush Main}" />
                <Setter TargetName="Border" Property="Background" Value="{theme:Brush Accent}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{theme:Brush MainBorder, Opacity=O50}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static styles:Menu.TopLevelItemTemplate}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Background="Transparent">
            <ContentPresenter Margin="6,3"
                              ContentSource="Header"
                              RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{theme:Brush Main}" />
                <Setter TargetName="Border" Property="Background" Value="{theme:Brush Accent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{theme:Brush MainBorder, Opacity=O50}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static styles:Menu.SubmenuTemplate}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
                Background="Transparent"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="Placeholder"
                      Grid.Column="0"
                      Width="24"
                      Height="24">
                    <ContentPresenter x:Name="Icon"
                                      Grid.Column="0"
                                      Width="16"
                                      Height="16"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />

                    <Path x:Name="CheckedPath"
                          Width="14"
                          Height="14"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource CheckGeometry}"
                          Fill="{TemplateBinding BorderBrush}"
                          Stretch="Uniform"
                          Visibility="Hidden" />
                </Grid>
                <Popup x:Name="Popup"
                       Grid.Column="0"
                       AllowsTransparency="True"
                       Focusable="False"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       Placement="Right"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource {x:Static styles:Menu.MenuScrollViewerStyle}}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ContentPresenter x:Name="HeaderHost"
                                  Grid.Column="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="5,2,0,2"
                           VerticalAlignment="Center"
                           Text="{TemplateBinding InputGestureText}" />
                <Path x:Name="SubMenuItems"
                      Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{StaticResource SubMenuGeometry}"
                      Fill="{TemplateBinding Foreground}"
                      Stretch="Uniform"
                      Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="HasItems" Value="True">
                <Setter TargetName="SubMenuItems" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckedPath" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="CheckedPath" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{theme:Brush Main}" />
                <Setter TargetName="Border" Property="Background" Value="{theme:Brush Accent}" />
                <Setter TargetName="CheckedPath" Property="Fill" Value="{theme:Brush Main}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{theme:Brush MainBorder, Opacity=O50}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Menu.MenuItemStyle}" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{theme:Brush Main}" />
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.TopLevelHeaderTemplate}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.TopLevelItemTemplate}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.SubmenuTemplate}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.SubmenuTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>