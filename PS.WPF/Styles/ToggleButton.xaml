<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:markup="clr-namespace:PS.WPF.Markup"
                    xmlns:resources="clr-namespace:PS.WPF.Resources"
                    xmlns:styles="clr-namespace:PS.WPF.Styles"
                    xmlns:theme="clr-namespace:PS.WPF.Theme"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters">

    <ResourceDictionary.MergedDictionaries>
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Styles/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static styles:ToggleButton.ToggleButtonTemplate}" TargetType="ToggleButton">
        <Border Name="PART_Border"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="1"
                SnapsToDevicePixels="True">
            <Border.BorderBrush>
                <MultiBinding Converter="{x:Static valueConverters:ColorConverters.AutomaticContrast}">
                    <Binding ElementName="PART_Border" Path="Background" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush" />
                </MultiBinding>
            </Border.BorderBrush>
            <TextElement.Foreground>
                <MultiBinding Converter="{x:Static valueConverters:ColorConverters.AutomaticContrast}">
                    <Binding ElementName="PART_Border" Path="Background" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Foreground" />
                </MultiBinding>
            </TextElement.Foreground>
            <Grid>
                <ContentPresenter Name="PART_ContentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                <Rectangle Name="PART_FocusRectangle"
                           Margin="1"
                           Opacity="0.5"
                           Stroke="{Binding ElementName=PART_Border, Path=(TextElement.Foreground)}"
                           StrokeDashArray="4 2"
                           StrokeThickness="1"
                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFocused, Converter={x:Static valueConverters:BooleanConverters.ToVisibility}}" />
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static valueConverters:ColorConverters.Shade}, ConverterParameter={markup:Double 0.3}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static valueConverters:ColorConverters.Tint}, ConverterParameter={markup:Double 0.2}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static valueConverters:ColorConverters.Shade}, ConverterParameter={markup:Double 0.2}}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static valueConverters:ColorConverters.Shade}, ConverterParameter={markup:Double 0.4}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static valueConverters:ColorConverters.Tint}, ConverterParameter={markup:Double 0.95}}" />
                <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:ToggleButton.ToggleButtonStyle}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{x:Static theme:ThemeBrushes.Accent}" />
        <Setter Property="BorderBrush" Value="{x:Static theme:ThemeBrushes.Basic}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{x:Static theme:ThemeFonts.FontFamilyStrong}" />
        <Setter Property="Foreground" Value="{x:Static theme:ThemeBrushes.Main}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:ToggleButton.ToggleButtonTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

</ResourceDictionary>