<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:styles="clr-namespace:PS.WPF.Controls.Native">

    <Style x:Key="{x:Static styles:Common.FocusRectangleStyle}" TargetType="Rectangle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stroke" Value="{theme:Brush MainForeground}" />
        <Setter Property="StrokeDashArray" Value="1 3" />
        <Setter Property="StrokeThickness" Value="1" />
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{theme:Font Normal}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="{x:Static styles:Common.TitleTextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{theme:FontSize XXXXL}" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.Heading0TextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{theme:FontSize XXXL}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.Heading1TextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{theme:FontSize XXL}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.Heading1ExtraTextBlockStyle}"
           BasedOn="{StaticResource {x:Static styles:Common.Heading1TextBlockStyle}}"
           TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{theme:Font ExtraStrong}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.NormalTextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{theme:FontSize M}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.QuoteTextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontSize" Value="{theme:FontSize XS}" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
    </Style>

    <Style x:Key="{x:Static styles:Common.TableColumnHeaderBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{theme:Font Strong}" />
        <Setter Property="FontSize" Value="{theme:FontSize M}" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
        <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
    </Style>


    <Style x:Key="{x:Static styles:Common.NormalStrongTextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{theme:Font Strong}" />
        <Setter Property="FontSize" Value="{theme:FontSize M}" />
    </Style>


    <ControlTemplate x:Key="{x:Static styles:Common.NormalTextBoxTemplate}" TargetType="TextBox">
        <Border Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="ReadOnly" />
                    <VisualState x:Name="MouseOver" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Common.NormalTextBoxStyle}"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{theme:Font Normal}" />
        <Setter Property="FontSize" Value="{theme:FontSize M}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Common.NormalTextBoxTemplate}}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="{x:Static styles:Common.RadioButtonTemplate}" TargetType="{x:Type RadioButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <Grid x:Name="Bullet"
                  Grid.Column="0"
                  Width="18"
                  Height="18"
                  VerticalAlignment="Top">
                <Ellipse x:Name="Border"
                         Margin="2"
                         Fill="{theme:Brush Main}"
                         SnapsToDevicePixels="True"
                         Stroke="{theme:Brush MainBorder}"
                         StrokeThickness="1" />

                <Ellipse x:Name="CheckMark"
                         Margin="2"
                         SnapsToDevicePixels="True"
                         Stroke="{theme:Brush Accent, Opacity=O75}"
                         StrokeThickness="3"
                         Visibility="Collapsed" />

                <Rectangle Name="FocusBorder"
                           Style="{StaticResource {x:Static styles:Common.FocusRectangleStyle}}"
                           Visibility="Hidden" />
            </Grid>

            <ContentPresenter x:Name="ContentPresenter"
                              Grid.Column="1"
                              Margin="4,0,0,0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              IsEnabled="{TemplateBinding IsEnabled}"
                              RecognizesAccessKey="True" />

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Shape.Fill).Color">
                                <EasingColorKeyFrame KeyTime="0" Value="{theme:Color MainHigh}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Shape.Fill).Color">
                                <EasingColorKeyFrame KeyTime="0" Value="{theme:Color MainLow}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Bullet"
                                             Storyboard.TargetProperty="Opacity"
                                             From="1"
                                             To="0.3"
                                             Duration="0:0:0.05" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Common.RadioButtonStyle}" TargetType="RadioButton">
        <Setter Property="Margin" Value="0,3" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Common.RadioButtonTemplate}}" />
    </Style>


    <ControlTemplate x:Key="{x:Static styles:Common.FlatDataGridColumnHeaderTemplate}"
                     TargetType="{x:Type DataGridColumnHeader}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Path x:Name="SortArrow"
                  Grid.Row="0"
                  Grid.Column="0"
                  Width="8"
                  Height="6"
                  Margin="0,0,5,3"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Data="M0,0 L1,0 0.5,1 z"
                  Fill="{theme:Brush MainForeground}"
                  RenderTransformOrigin="0.5,0.5"
                  Stretch="Fill"
                  Visibility="Collapsed" />

            <TextBlock x:Name="TextContentTextBlock"
                       Grid.Row="0"
                       Grid.Column="1"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Style="{StaticResource {x:Static styles:Common.TableColumnHeaderBlockStyle}}"
                       Text="{TemplateBinding Content}"
                       Visibility="Collapsed" />

            <ContentPresenter x:Name="DefaultContentContentPresenter"
                              Grid.Row="0"
                              Grid.Column="1"
                              Margin="0,0,5,0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

            <Rectangle Grid.Row="1"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Height="1"
                       Margin="0,0,0,10"
                       HorizontalAlignment="Stretch"
                       Stroke="{theme:Brush MainBorder}" />
        </Grid>

        <ControlTemplate.Triggers>

            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content, Converter={x:Static valueConverters:ObjectConverters.AssignableFrom}, ConverterParameter={x:Type system:String}}"
                Value="True">
                <Setter TargetName="DefaultContentContentPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="TextContentTextBlock" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="SortDirection" Value="Ascending">
                <Setter TargetName="SortArrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="SortDirection" Value="Descending">
                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static styles:Common.FlatDataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Common.FlatDataGridColumnHeaderTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="{x:Static styles:Common.FlatDataGridCellStyle}" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static styles:Common.FlatDataGridStyle}" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="CellStyle" Value="{StaticResource {x:Static styles:Common.FlatDataGridCellStyle}}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource {x:Static styles:Common.FlatDataGridColumnHeaderStyle}}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{theme:Brush MainBorder, Opacity=O25}" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
    </Style>

</ResourceDictionary>