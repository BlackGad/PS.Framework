<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PS.WPF.Controls"
                    xmlns:markup="clr-namespace:PS.WPF.Markup"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup"
                    xmlns:styles="clr-namespace:PS.WPF.Controls.Native">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PS.WPF;component/Controls/Native/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static local:DecimalTextBox+Resource.ControlTemplate}" TargetType="local:DecimalTextBox">
        <Grid Background="{TemplateBinding Background}">
            <Border Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True" />

            <TextBox Name="TextBox"
                     Margin="{TemplateBinding Padding}"
                     Padding="0"
                     Background="{TemplateBinding Background}"
                     Foreground="{TemplateBinding Foreground}"
                     BorderThickness="0"
                     FontFamily="{TemplateBinding FontFamily}"
                     FontSize="{TemplateBinding FontSize}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Style="{StaticResource {x:Static styles:Common.NormalTextBoxStyle}}"
                     Text="{Binding EditableText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     TextAlignment="{TemplateBinding TextAlignment}"
                     Visibility="Collapsed" />

            <TextBlock Name="TextBlock"
                       Margin="{TemplateBinding Padding}"
                       Background="{TemplateBinding Background}"
                       Foreground="{TemplateBinding Foreground}"
                       FontFamily="{TemplateBinding FontFamily}"
                       FontSize="{TemplateBinding FontSize}"
                       Style="{StaticResource {x:Static styles:Common.NormalTextBlockStyle}}"
                       Text="{TemplateBinding DisplayText}"
                       TextAlignment="{TemplateBinding TextAlignment}" />

            <TextBlock Name="TextBlockWatermark"
                       Margin="{TemplateBinding Padding}"
                       Background="{TemplateBinding Background}"
                       Foreground="{TemplateBinding Foreground}"
                       FontFamily="{TemplateBinding FontFamily}"
                       FontSize="{TemplateBinding FontSize}"
                       FontStyle="Italic"
                       Opacity="0.5"
                       Style="{StaticResource {x:Static styles:Common.NormalTextBlockStyle}}"
                       Text="{TemplateBinding Watermark}"
                       TextAlignment="{TemplateBinding TextAlignment}"
                       Visibility="Collapsed" />

            <Rectangle Name="FocusBorder"
                       Style="{StaticResource {x:Static styles:Common.FocusRectangleStyle}}"
                       Visibility="Hidden" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="Border" Property="Opacity" Value="0.2" />
            </Trigger>

            <Trigger Property="IsWatermarkAvailable" Value="True">
                <Setter TargetName="TextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="TextBlockWatermark" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsEditMode" Value="True">
                <Setter TargetName="TextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="TextBlockWatermark" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="TextBox" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.2" />
                <Setter TargetName="TextBlock" Property="Opacity" Value="0.2" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="True" />
                    <Condition Property="FocusBorderVisibility" Value="Visible" />
                </MultiTrigger.Conditions>
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static local:DecimalTextBox+Resource.ControlStyle}" TargetType="local:DecimalTextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template" Value="{StaticResource {x:Static local:DecimalTextBox+Resource.ControlTemplate}}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <!--  WPF Engine cannot resolve Bindings in straight forward Setters. So Bypass this with triggers  -->
            <DataTrigger Binding="{Binding Source={markup:Boolean True}}" Value="{markup:Boolean True}">
                <Setter Property="Background" Value="{theme:Brush Main}" />
                <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
                <Setter Property="FontFamily" Value="{theme:Font Normal}" />
                <Setter Property="FontSize" Value="{theme:FontSize M}" />
                <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>