<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:aware="clr-namespace:PS.Patterns.Aware;assembly=PS.Primitives"
                    xmlns:controls="clr-namespace:PS.WPF.Controls"
                    xmlns:presentation="clr-namespace:PS.WPF"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters">

    <DataTemplate x:Key="{x:Static controls:UICommandsControl+Resource.CommandButtonTemplate}" DataType="presentation:IUICommand">
        <Button x:Name="Button"
                MinWidth="75"
                MinHeight="25"
                Margin="5,0,0,0"
                Command="{Binding}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=controls:UICommandsControl}}"
                Content="{Binding Title}"
                ToolTip="{Binding Description}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Converter={x:Static valueConverters:ObjectConverters.AssignableFrom}, ConverterParameter={x:Type aware:IIsDefaultAware}}" Value="True">
                <Setter TargetName="Button" Property="IsDefault" Value="{Binding IsDefault}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Converter={x:Static valueConverters:ObjectConverters.AssignableFrom}, ConverterParameter={x:Type aware:IIsCancelAware}}" Value="True">
                <Setter TargetName="Button" Property="IsCancel" Value="{Binding IsCancel}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="{x:Static controls:UICommandsControl+Resource.ControlTemplate}" TargetType="controls:UICommandsControl">
        <Grid Background="{TemplateBinding Background}">
            <ItemsPresenter MinHeight="20"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:UICommandsControl+Resource.ControlStyle}" TargetType="controls:UICommandsControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemTemplate" Value="{StaticResource {x:Static controls:UICommandsControl+Resource.CommandButtonTemplate}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource {x:Static controls:UICommandsControl+Resource.ControlTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>

</ResourceDictionary>