<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:components="clr-namespace:PS.WPF.Components"
                    xmlns:controls="clr-namespace:PS.WPF.Controls"
                    xmlns:markup="clr-namespace:PS.WPF.Markup"
                    xmlns:resources="clr-namespace:PS.WPF.Resources"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup"
                    xmlns:styles="clr-namespace:PS.WPF.Controls.Native">

    <ResourceDictionary.MergedDictionaries>
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Controls/Native/Button.xaml" />
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Controls/Native/ToggleButton.xaml" />
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Controls/Native/Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <controls:SplitMenuButtonCornerRadiusConverter x:Key="CornerRadiusConverter" />

    <Geometry x:Key="DropDownGeometry">M 0 0 L 2.5 3 L 5 0 Z</Geometry>

    <ItemsPanelTemplate x:Key="{x:Static controls:SplitMenuButton+Resource.ItemsPanelTemplate}">
        <StackPanel Orientation="Vertical" />
    </ItemsPanelTemplate>

    <Style x:Key="{x:Static controls:SplitMenuButton+Resource.MenuItemStyle}" TargetType="{x:Type MenuItem}">
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Static styles:Menu.MenuItemStyle}}" TargetType="MenuItem" />
        </Style.Resources>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static styles:Menu.SubmenuTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <!--  WPF Engine cannot resolve Bindings in straight forward Setters. So Bypass this with triggers  -->
            <DataTrigger Binding="{Binding Source={markup:Boolean True}}" Value="{markup:Boolean True}">
                <Setter Property="Background" Value="{theme:Brush Main}" />
                <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
                <Setter Property="Foreground" Value="{theme:Brush MainForeground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static controls:SplitMenuButton+Resource.ControlTemplate}"
                     TargetType="controls:SplitMenuButton">
        <Border Name="PART_Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Name="PART_Button"
                        Grid.Column="0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        Foreground="{TemplateBinding Foreground}"
                        BorderThickness="0"
                        components:StoreBrush.MouseOver="{TemplateBinding components:StoreBrush.MouseOver}"
                        components:StoreBrush.Pressed="{TemplateBinding components:StoreBrush.Pressed}"
                        components:StoreBrush.PressedBorder="{TemplateBinding components:StoreBrush.PressedBorder}"
                        components:StoreGeometry.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter={x:Static controls:SplitMenuButtonCornerRadiusConverter.Left}}"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        CommandTarget="{TemplateBinding CommandTarget}"
                        OverridesDefaultStyle="True"
                        Style="{StaticResource {x:Static styles:Button.ButtonStyle}}">
                    <ContentPresenter Name="PART_ContentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      ContentSource="Header" />
                </Button>
                <Rectangle Name="PART_Separator"
                           Grid.Column="1"
                           Width="1"
                           Fill="{Binding ElementName=PART_Border, Path=BorderBrush}" />
                <ToggleButton Name="PART_ToggleButton"
                              Grid.Column="2"
                              Width="20"
                              Margin="0"
                              Background="{TemplateBinding Background}"
                              Foreground="{TemplateBinding Foreground}"
                              BorderThickness="0"
                              components:StoreBrush.MouseOver="{TemplateBinding components:StoreBrush.MouseOver}"
                              components:StoreBrush.Pressed="{TemplateBinding components:StoreBrush.Pressed}"
                              components:StoreBrush.PressedBorder="{TemplateBinding components:StoreBrush.PressedBorder}"
                              components:StoreBrush.Selected="{TemplateBinding components:StoreBrush.Selected}"
                              components:StoreBrush.SelectedBorder="{TemplateBinding components:StoreBrush.SelectedBorder}"
                              components:StoreGeometry.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter={x:Static controls:SplitMenuButtonCornerRadiusConverter.Right}}"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMenuOpened, Mode=TwoWay}"
                              OverridesDefaultStyle="True"
                              Style="{StaticResource {x:Static styles:ToggleButton.ToggleButtonStyle}}">
                    <Path Name="PART_ToggleContent"
                          Width="10"
                          Margin="2"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource DropDownGeometry}"
                          Fill="{TemplateBinding Foreground}"
                          Stretch="Uniform" />
                </ToggleButton>
                <Popup Name="PART_Popup"
                       Grid.Column="0"
                       MinWidth="{TemplateBinding ActualWidth}"
                       AllowsTransparency="True"
                       Focusable="True"
                       IsOpen="{Binding ElementName=PART_ToggleButton, Path=IsChecked, Mode=TwoWay}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=PART_Border}"
                       SnapsToDevicePixels="True"
                       StaysOpen="False"
                       VerticalOffset="-1">
                    <Border Background="{theme:Brush Main}"
                            BorderBrush="{Binding ElementName=PART_Border, Path=BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                      CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Disabled"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <Menu x:Name="PART_Menu"
                                  Background="Transparent"
                                  BorderThickness="0"
                                  ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
                                  ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
                                  ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
                                  ItemTemplate="{TemplateBinding MenuItemTemplate}"
                                  ItemsPanel="{TemplateBinding MenuItemsPanel}"
                                  Style="{TemplateBinding MenuStyle}" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMenuOpened" Value="True">
                <Setter TargetName="PART_Border" Property="CornerRadius"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter={x:Static controls:SplitMenuButtonCornerRadiusConverter.SingleWithMenu}}" />
                <Setter TargetName="PART_Button" Property="components:StoreGeometry.CornerRadius"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter={x:Static controls:SplitMenuButtonCornerRadiusConverter.LeftWithMenu}}" />
                <Setter TargetName="PART_ToggleButton" Property="components:StoreGeometry.CornerRadius"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(components:StoreGeometry.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter={x:Static controls:SplitMenuButtonCornerRadiusConverter.RightWithMenu}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                <Setter TargetName="PART_ToggleContent" Property="Fill"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:SplitMenuButton+Resource.ControlStyle}" TargetType="controls:SplitMenuButton">
        <Setter Property="Background" Value="{theme:Brush Accent}" />
        <Setter Property="BorderBrush" Value="{theme:Brush MainBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontFamily" Value="{theme:Font Strong}" />
        <Setter Property="Foreground" Value="{theme:Brush AccentForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MenuItemContainerStyle"
                Value="{StaticResource {x:Static controls:SplitMenuButton+Resource.MenuItemStyle}}" />
        <Setter Property="MenuItemsPanel"
                Value="{StaticResource {x:Static controls:SplitMenuButton+Resource.ItemsPanelTemplate}}" />
        <Setter Property="MenuStyle" Value="{StaticResource {x:Static styles:Menu.MenuStyle}}" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static controls:SplitMenuButton+Resource.ControlTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="components:StoreBrush.MouseOver" Value="{theme:Brush AccentForeground}" />
        <Setter Property="components:StoreBrush.Pressed" Value="{theme:Brush AccentDeep}" />
        <Setter Property="components:StoreBrush.PressedBorder" Value="{theme:Brush AccentBorderDeep}" />
        <Setter Property="components:StoreBrush.Selected" Value="{theme:Brush AccentLow}" />
        <Setter Property="components:StoreBrush.SelectedBorder" Value="{theme:Brush AccentBorderLow}" />
        <Setter Property="components:StoreGeometry.CornerRadius" Value="3" />
    </Style>

</ResourceDictionary>