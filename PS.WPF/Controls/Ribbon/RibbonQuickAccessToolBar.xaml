<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:primitives="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:controls="clr-namespace:PS.WPF.Controls.Ribbon"
                    xmlns:controls1="clr-namespace:PS.WPF.Controls.Ribbon.Controls"
                    xmlns:components="clr-namespace:PS.WPF.Components">

    <ControlTemplate x:Key="{x:Static controls:RibbonQuickAccessToolBar+Resource.ControlTemplate}"
                     TargetType="controls:RibbonQuickAccessToolBar">
        <Grid Name="Layout"
              Margin="{TemplateBinding Margin}"
              Background="{Binding RelativeSource={RelativeSource Self}, Path=(components:StoreBrush.Background)}"
              SnapsToDevicePixels="True">
            <components:StoreBrush.Background>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Background"
                             Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.Background"
                             Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.Background>
            <components:StoreBrush.BorderBrush>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush"
                             Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.BorderBrush"
                             Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.BorderBrush>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <primitives:RibbonQuickAccessToolBarPanel Name="PART_MainPanel"
                                                      Grid.Column="0"
                                                      IsItemsHost="true" />
            <ContentPresenter Name="MainCustomizeMenuHost"
                              Grid.Column="2"
                              Content="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}" />
            <Grid x:Name="OverflowButtonHost"
                  Grid.Column="2"
                  Visibility="Collapsed">
                <controls1:RibbonToggleButton x:Name="PART_OverflowButton"
                                              Width="12"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              KeyTip="00">
                    <RibbonToggleButton.ControlSizeDefinition>
                        <RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
                    </RibbonToggleButton.ControlSizeDefinition>
                </controls1:RibbonToggleButton>
                <Path Width="7"
                      Height="5"
                      Margin="1,0,0,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,0 L2,2 0,4 M4,0 L6,2 4,4"
                      Fill="{TemplateBinding Foreground}"
                      IsHitTestVisible="False"
                      Stretch="Fill"
                      Stroke="{TemplateBinding Foreground}" />
                <Popup x:Name="PART_OverflowPopup"
                       AllowsTransparency="true"
                       Focusable="false"
                       IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                    <Grid>
                        <Border Background="{theme:Brush Main}" />
                        <Border x:Name="PopupBorder"
                                Background="{Binding ElementName=Layout, Path=(components:StoreBrush.Background)}"
                                BorderBrush="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                                BorderThickness="1">
                            <DockPanel Margin="2">
                                <primitives:RibbonQuickAccessToolBarOverflowPanel Name="PART_OverflowPanel"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle" />
                                <ContentPresenter Name="OverflowCustomizeMenuHost" DockPanel.Dock="Right" />
                            </DockPanel>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasOverflowItems" Value="true">
                <Setter TargetName="MainCustomizeMenuHost" Property="Content" Value="{x:Null}" />
                <Setter TargetName="OverflowButtonHost" Property="Visibility" Value="Visible" />
                <Setter TargetName="OverflowCustomizeMenuHost" Property="Content"
                        Value="{Binding Path=CustomizeMenuButton, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger SourceName="PART_OverflowPopup" Property="Popup.IsOpen" Value="False">
                <Setter TargetName="PART_OverflowPopup" Property="PopupAnimation" Value="None" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:RibbonQuickAccessToolBar+Resource.ControlStyle}"
           TargetType="controls:RibbonQuickAccessToolBar">
        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.CaptionHeightKey}}" />
        <Setter Property="Margin" Value="3,0,3,0" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static controls:RibbonQuickAccessToolBar+Resource.ControlTemplate}}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>

</ResourceDictionary>