<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:PS.WPF.Theme"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:controls="clr-namespace:PS.WPF.Controls.Ribbon"
                    xmlns:controls1="clr-namespace:PS.WPF.Controls.Ribbon.Controls"
                    xmlns:components="clr-namespace:PS.WPF.Components">

    <Geometry x:Key="DropDownGeometry">M 0 0 L 2.5 3 L 5 0 Z</Geometry>

    <ControlTemplate x:Key="{x:Static controls:RibbonGroup+Resource.CollapsedControlTemplate}" TargetType="controls:RibbonGroup">
        <Grid x:Name="Layout" Background="{Binding RelativeSource={RelativeSource Self}, Path=(components:StoreBrush.Background)}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <components:StoreBrush.Background>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.Main}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.Background>
            <components:StoreBrush.BorderBrush>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.MainBorder}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.BorderBrush>
            <controls1:RibbonToggleButton x:Name="PART_ToggleButton"
                                         Margin="{TemplateBinding Padding}"
                                         Background="{TemplateBinding Background}"
                                         IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Label="{TemplateBinding Header}"
                                         LargeImageSource="{TemplateBinding LargeImageSource}"
                                         RibbonTwoLineText.PathData="{StaticResource DropDownGeometry}"
                                         SmallImageSource="{TemplateBinding SmallImageSource}">
                <controls1:RibbonToggleButton.ControlSizeDefinition>
                    <RibbonControlSizeDefinition ImageSize="Large" IsLabelVisible="True" />
                </controls1:RibbonToggleButton.ControlSizeDefinition>
            </controls1:RibbonToggleButton>
            <Popup x:Name="PART_Popup"
                   Grid.Column="0"
                   AllowsTransparency="true"
                   Focusable="false"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=PART_ToggleButton}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Border Name="PopupBorder"
                        Height="{TemplateBinding ActualHeight}"
                        Background="{Binding ElementName=Layout, Path=(components:StoreBrush.Background)}"
                        BorderBrush="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                        BorderThickness="1">
                    <Grid Margin="0,2,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" MinHeight="16" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="ItemsPresenterLayout"
                              Grid.Row="0"
                              Margin="{TemplateBinding Padding}">
                            <ItemsPresenter Name="ItemsPresenter"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="True" />
                            <ContentControl Name="TemplateContentControl"
                                            Focusable="False"
                                            Visibility="Collapsed" />
                        </Grid>
                        <ContentPresenter Name="PART_Header"
                                          Grid.Row="1"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"
                                          TextElement.Foreground="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}" />
                    </Grid>
                </Border>


            </Popup>
            <Border x:Name="Separator"
                    Grid.Column="1"
                    Width="1"
                    HorizontalAlignment="Right"
                    Background="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                    SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Background, RelativeSource={RelativeSource Self}}" Value="Transparent">
                <Setter TargetName="PopupBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Ribbon.Background}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ItemsPresenterLayout" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsInQuickAccessToolBar" Value="True">
                <Setter TargetName="PART_ToggleButton" Property="ControlSizeDefinition">
                    <Setter.Value>
                        <RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="PART_ToggleButton" Property="Margin" Value="0" />
                <Setter TargetName="PopupBorder" Property="MinHeight" Value="91" />
                <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="Layout" Property="ToolTipService.IsEnabled" Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static controls:RibbonGroup+Resource.ControlTemplate}" TargetType="controls:RibbonGroup">
        <Grid x:Name="Layout" Background="{Binding RelativeSource={RelativeSource Self}, Path=(components:StoreBrush.Background)}">
            <components:StoreBrush.Background>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.Main}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.Background>
            <components:StoreBrush.BorderBrush>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.MainBorder}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.BorderBrush>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="16" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Separator"
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Grid.Column="1"
                    Width="1"
                    Margin="0,2"
                    HorizontalAlignment="Right"
                    Background="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                    Opacity="0.5"
                    SnapsToDevicePixels="True" />
            <Grid x:Name="ItemsPresenterLayout"
                  Grid.Row="0"
                  Grid.Column="0"
                  Margin="{TemplateBinding Padding}">
                <ItemsPresenter Name="ItemsPresenter" />
                <ContentControl Name="TemplateContentControl"
                                Focusable="False"
                                Visibility="Collapsed" />
            </Grid>
            <ContentPresenter Name="PART_Header"
                              Grid.Row="2"
                              Grid.Column="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              ContentSource="Header"
                              TextElement.Foreground="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ItemsPresenterLayout" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:RibbonGroup+Resource.ControlStyle}" TargetType="controls:RibbonGroup">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template" Value="{StaticResource {x:Static controls:RibbonGroup+Resource.ControlTemplate}}" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Style.Triggers>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter Property="Template" Value="{StaticResource {x:Static controls:RibbonGroup+Resource.CollapsedControlTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>