<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:markup="clr-namespace:PS.WPF.Markup"
                    xmlns:theme="clr-namespace:PS.WPF.Theme"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:controls="clr-namespace:PS.WPF.Controls.Ribbon">

    <ControlTemplate x:Key="{x:Static controls:RibbonContextMenu.ControlTemplate}" TargetType="RibbonContextMenu">
        <Border x:Name="Border"
                BorderThickness="1"
                SnapsToDevicePixels="True">
            <Border.BorderBrush>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.MainBorder}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </Border.BorderBrush>
            <Border.Background>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.Main}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </Border.Background>
            <TextElement.Foreground>
                <PriorityBinding>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Foreground" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).Foreground" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding ElementName="Border" Path="Background" Converter="{x:Static valueConverters:ColorConverters.ContrastForeground}" />
                </PriorityBinding>
            </TextElement.Foreground>
            <Grid>
                <Border x:Name="MouseOverBorder" Visibility="Hidden">
                    <Border.Background>
                        <PriorityBinding>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).MouseOverBackground" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                            <Binding ElementName="Border" Path="Background" Converter="{x:Static valueConverters:ColorConverters.Shade}" ConverterParameter="{markup:Double 0.1}" />
                        </PriorityBinding>
                    </Border.Background>
                    <Border.BorderBrush>
                        <PriorityBinding>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).MouseOverBorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                            <Binding ElementName="Border" Path="BorderBrush" Converter="{x:Static valueConverters:ColorConverters.Shade}" ConverterParameter="{markup:Double 0.1}" />
                        </PriorityBinding>
                    </Border.BorderBrush>
                </Border>
                <Border x:Name="PressedBorder" Visibility="Hidden">
                    <Border.Background>
                        <PriorityBinding>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).PressedBackground" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                            <Binding ElementName="Border" Path="Background" Converter="{x:Static valueConverters:ColorConverters.Shade}" ConverterParameter="{markup:Double 0.1}" />
                        </PriorityBinding>
                    </Border.Background>
                    <Border.BorderBrush>
                        <PriorityBinding>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PlacementTarget.(RibbonControlService.Ribbon).PressedBorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                            <Binding ElementName="Border" Path="BorderBrush" Converter="{x:Static valueConverters:ColorConverters.Shade}" ConverterParameter="{markup:Double 0.1}" />
                        </PriorityBinding>
                    </Border.BorderBrush>
                </Border>
                <ScrollViewer x:Name="SubMenuScrollViewer"
                              Margin="1"
                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                    <ItemsPresenter x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    RenderOptions.ClearTypeHint="Enabled" />
                </ScrollViewer>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="HasGallery" Value="True">
                <Setter TargetName="SubMenuScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter TargetName="SubMenuScrollViewer" Property="VerticalScrollBarVisibility" Value="Disabled" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:RibbonContextMenu.ControlStyle}" TargetType="RibbonContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static controls:RibbonContextMenu.ControlTemplate}}" />
    </Style>

</ResourceDictionary>