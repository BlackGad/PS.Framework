<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resources="clr-namespace:PS.WPF.Resources"
                    xmlns:theme="clr-namespace:PS.WPF.Theme"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:controls="clr-namespace:PS.WPF.Controls.Ribbon.Controls"
                    xmlns:ribbon="clr-namespace:PS.WPF.Controls.Ribbon"
                    xmlns:components="clr-namespace:PS.WPF.Components">

    <ResourceDictionary.MergedDictionaries>
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Controls/Ribbon/RibbonResizeThumbs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="DropDownGeometry">M 0 0 L 2.5 3 L 5 0 Z</Geometry>

    <ControlTemplate x:Key="{x:Static controls:RibbonMenuButton+Resource.ControlTemplate}" TargetType="controls:RibbonMenuButton">
        <Grid x:Name="Layout"
              Background="Transparent"
              SnapsToDevicePixels="True">
            <components:StoreBrush.Background>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.Main}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.Background" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.Background>
            <components:StoreBrush.BorderBrush>
                <PriorityBinding FallbackValue="{x:Static theme:ThemeBrushes.MainBorder}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Ribbon.BorderBrush" Converter="{x:Static valueConverters:ObjectConverters.UnsetIfNull}" />
                </PriorityBinding>
            </components:StoreBrush.BorderBrush>

            <controls:RibbonToggleButton Margin="0"
                                         Padding="{TemplateBinding Padding}"
                                         HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         CheckedBackground="{TemplateBinding PressedBackground}"
                                         CheckedBorderBrush="{TemplateBinding PressedBorderBrush}"
                                         FocusedBackground="{TemplateBinding FocusedBackground}"
                                         FocusedBorderBrush="{TemplateBinding FocusedBorderBrush}"
                                         MouseOverBackground="{TemplateBinding MouseOverBackground}"
                                         MouseOverBorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                         ClickMode="Press"
                                         ControlSizeDefinition="{TemplateBinding ControlSizeDefinition}"
                                         FocusVisualStyle="{x:Null}"
                                         IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                         Label="{TemplateBinding Label}"
                                         LargeImageSource="{TemplateBinding LargeImageSource}"
                                         RibbonTwoLineText.HasTwoLines="{TemplateBinding RibbonTwoLineText.HasTwoLines}"
                                         RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}"
                                         SmallImageSource="{TemplateBinding SmallImageSource}"
                                         SuppressCommandExecutionOnClick="True" />
            <Popup x:Name="PART_Popup"
                   Grid.Column="0"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   SnapsToDevicePixels="True">
                <Border x:Name="PopupBorder"
                        Background="{Binding ElementName=Layout, Path=(components:StoreBrush.Background)}"
                        BorderBrush="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                        BorderThickness="1">
                    <Grid Margin="1">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                      CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Disabled"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            Grid.IsSharedSizeScope="True"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            RenderOptions.ClearTypeHint="Enabled" />
                        </ScrollViewer>
                        <Border Name="ResizeControl"
                                Grid.Row="1"
                                Background="Transparent"
                                BorderBrush="{Binding ElementName=Layout, Path=(components:StoreBrush.BorderBrush)}"
                                BorderThickness="0,1,0,0"
                                Visibility="Collapsed">
                            <Thumb x:Name="PART_ResizeThumb" Style="{StaticResource {x:Static ribbon:RibbonResizeThumbs.ThumbBothRightTopStyle}}" />
                        </Border>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ControlSizeDefinition.ImageSize}" Value="Small" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsInQuickAccessToolBar}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Height" Value="Auto" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:RibbonMenuButton+Resource.ControlStyle}" TargetType="controls:RibbonMenuButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="QuickAccessToolBarControlSizeDefinition">
            <Setter.Value>
                <RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="RibbonTwoLineText.PathData" Value="{StaticResource DropDownGeometry}" />
        <Setter Property="Template" Value="{StaticResource {x:Static controls:RibbonMenuButton+Resource.ControlTemplate}}" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

</ResourceDictionary>