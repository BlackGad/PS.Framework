<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PS.WPF.Controls.BusyContainer"
                    xmlns:resources="clr-namespace:PS.WPF.Resources"
                    xmlns:valueConverters="clr-namespace:PS.WPF.ValueConverters"
                    xmlns:theme="clr-namespace:PS.WPF.Theming.Markup"
                    xmlns:markup="clr-namespace:PS.WPF.Markup"
                    xmlns:styles="clr-namespace:PS.WPF.Controls.Native">

    <ResourceDictionary.MergedDictionaries>
        <resources:SharedResourceDictionary Source="/PS.WPF;component/Controls/Native/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <CombinedGeometry x:Key="{x:Static controls:BusyContainer+Resource.ArcGeometry}" GeometryCombineMode="Exclude">
        <CombinedGeometry.Geometry1>
            <CombinedGeometry GeometryCombineMode="Exclude">
                <CombinedGeometry.Geometry1>
                    <EllipseGeometry Center="40,40"
                                     RadiusX="40"
                                     RadiusY="40" />
                </CombinedGeometry.Geometry1>
                <CombinedGeometry.Geometry2>
                    <EllipseGeometry Center="40,40"
                                     RadiusX="30"
                                     RadiusY="30" />
                </CombinedGeometry.Geometry2>
            </CombinedGeometry>
        </CombinedGeometry.Geometry1>
        <CombinedGeometry.Geometry2>
            <PathGeometry>
                <PathGeometry.Figures>
                    <PathFigure StartPoint="0,0">
                        <PathFigure.Segments>
                            <LineSegment Point="80,0" />
                            <LineSegment Point="0,80" />
                            <LineSegment Point="80,80" />
                        </PathFigure.Segments>
                    </PathFigure>
                </PathGeometry.Figures>
            </PathGeometry>
        </CombinedGeometry.Geometry2>
    </CombinedGeometry>

    <Style x:Key="{x:Static controls:BusyContainer+Resource.ArcPathStyle}" TargetType="Path">
        <Setter Property="Data" Value="{StaticResource {x:Static controls:BusyContainer+Resource.ArcGeometry}}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform x:Name="noFreeze" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <valueConverters:CascadeValueConverter x:Key="TextBlockVisibilityConverter">
        <valueConverters:RelayValueConverter Instance="{x:Static valueConverters:ObjectConverters.Exist}" />
        <valueConverters:RelayValueConverter Instance="{x:Static valueConverters:BooleanConverters.ToVisibility}" />
    </valueConverters:CascadeValueConverter>

    <ControlTemplate x:Key="{x:Static controls:BusyContainer+Resource.ControlTemplate}"
                     TargetType="controls:BusyContainer">
        <Grid x:Name="Layout" Background="{TemplateBinding Background}">

            <ContentPresenter x:Name="PART_ContentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Visibility="Visible" />

            <Grid x:Name="PART_Cover"
                  Background="{TemplateBinding Background}"
                  Visibility="Collapsed">
                <Grid Margin="30"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Path Grid.Row="0"
                          Width="80"
                          Height="80"
                          Fill="{TemplateBinding Foreground}"
                          Style="{StaticResource {x:Static controls:BusyContainer+Resource.ArcPathStyle}}">
                        <Path.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation RepeatBehavior="Forever"
                                                         Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="-360"
                                                         Duration="0:0:1.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Path.Triggers>
                    </Path>

                    <Path Grid.Row="0"
                          Width="60"
                          Height="60"
                          Fill="{TemplateBinding Foreground}"
                          Opacity="0.5"
                          Style="{StaticResource {x:Static controls:BusyContainer+Resource.ArcPathStyle}}">
                        <Path.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation RepeatBehavior="Forever"
                                                         Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="360"
                                                         Duration="0:0:1.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Path.Triggers>
                    </Path>

                    <Grid Grid.Row="1"
                          Margin="5,0,0,0"
                          VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="PART_Title"
                                   Grid.Row="0"
                                   Style="{StaticResource {x:Static styles:Common.Heading1TextBlockStyle}}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap"
                                   Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource TextBlockVisibilityConverter}}" />

                        <TextBlock x:Name="PART_Description"
                                   Grid.Row="1"
                                   MaxWidth="400"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource {x:Static styles:Common.QuoteTextBlockStyle}}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap" />
                    </Grid>

                </Grid>
            </Grid>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsBusy" Value="True">
                <Setter TargetName="PART_Cover" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger SourceName="PART_Cover" Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Cover"
                                             Storyboard.TargetProperty="(Button.Opacity)"
                                             From="0"
                                             To="0.9"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static controls:BusyContainer+Resource.ControlStyle}" TargetType="controls:BusyContainer">
        <Setter Property="Behavior" Value="Auto" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Template" Value="{StaticResource {x:Static controls:BusyContainer+Resource.ControlTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Style.Triggers>
            <!--  WPF Engine cannot resolve Bindings in straight forward Setters. So Bypass this with triggers  -->
            <DataTrigger Binding="{Binding Source={markup:Boolean True}}" Value="{markup:Boolean True}">
                <Setter Property="Background" Value="{theme:Brush Main}" />
                <Setter Property="Foreground" Value="{theme:Brush Accent}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>